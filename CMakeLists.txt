# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include("CMake/cmkr.cmake" OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Options
option(APPINITHOOK_PRIVATE_MODULES "" ON)
option(APPINITHOOK_UNLOAD_DISPATCHER "" ON)

include("CMake/msvc-static-runtime.cmake")
include("CMake/msvc-configurations.cmake")

project(AppInitHook
	VERSION
		0.1.0
)

include("CMake/flatten-build-hierarchy.cmake")
include("CMake/AppInitHook-custom.cmake")

# Libraries
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/Libraries")
else()
	set(CMAKE_FOLDER Libraries)
endif()
add_subdirectory(Libraries)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Modules
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/Modules")
else()
	set(CMAKE_FOLDER Modules)
endif()
add_subdirectory(Modules)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})


if(APPINITHOOK_PRIVATE_MODULES) # private
	# Private
	set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
	if(CMAKE_FOLDER)
		set(CMAKE_FOLDER "${CMAKE_FOLDER}/Private")
	else()
		set(CMAKE_FOLDER Private)
	endif()
	add_subdirectory(Private)
	set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

endif()


# Target TestLoader
set(CMKR_TARGET TestLoader)
set(TestLoader_SOURCES "")

list(APPEND TestLoader_SOURCES
	"TestLoader/TestLoader.cpp"
)

list(APPEND TestLoader_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${TestLoader_SOURCES})
add_executable(TestLoader)

if(TestLoader_SOURCES)
	target_sources(TestLoader PRIVATE ${TestLoader_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT TestLoader)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${TestLoader_SOURCES})

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

